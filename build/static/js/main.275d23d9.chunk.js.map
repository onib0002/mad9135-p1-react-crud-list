{"version":3,"sources":["components/Navbar.js","components/NewItem.js","components/ReadOnlyRow.js","components/EditableRow.js","components/ListView.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","props","light","expand","color","dark","to","pathname","className","size","NewItem","useState","JSON","parse","localStorage","getItem","contacts","setContacts","fullName","address","phoneNumber","email","addFormData","setAddFormData","handleAddFormChange","event","preventDefault","fieldName","target","getAttribute","fieldValue","value","newFormData","console","log","method","type","name","required","placeholder","onChange","onClick","newContact","id","nanoid","newContacts","setItem","stringify","window","location","replace","ReadOnlyRow","contact","handleEditClick","handleDeleteClick","EditableRow","editFormData","handleEditFormChange","handleCancelClick","ListView","setEditFormData","editContactId","setEditContactId","formValues","contactId","index","findIndex","splice","onSubmit","editedContact","map","App","path","exact","data","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","hashType","document","getElementById"],"mappings":"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","file":"static/js/main.275d23d9.chunk.js","sourcesContent":["import { NavLink } from \"react-router-dom\";\nimport {\n  Navbar,\n  Nav,\n  NavItem,\n  NavbarBrand,\n  Button,\n  Container\n} from \"reactstrap\";\n\nexport default function NavBar(props){\n  return(\n    <Navbar light expand=\"md\" color=\"dark\" dark>\n      <Container>\n      <Nav>\n          <NavLink to={{pathname: '/addList'}}>\n            <Button className=\"btnAdd\" size=\"sm\" >Add new</Button></NavLink>\n        </Nav>\n        <NavbarBrand>Employee List</NavbarBrand>\n      </Container>\n    </Navbar>  \n\n  );\n}\n","import React, {useState, useEffect} from \"react\"\nimport { nanoid } from \"nanoid\";\nimport { \n  Button,\n  Input,\n  Label \n} from \"reactstrap\";\n\nexport default function NewItem(props){\n\n\n  const [contacts, setContacts] = useState(JSON.parse(localStorage.getItem('onibile')));\n  const [addFormData, setAddFormData] = useState({\n    fullName: \"\",\n    address: \"\",\n    phoneNumber: \"\",\n    email: \"\",\n  });\n\n\n  const handleAddFormChange = (event) => {\n    event.preventDefault();\n\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n\n    const newFormData = { ...addFormData };\n    newFormData[fieldName] = fieldValue;\n\n    setAddFormData(newFormData);\n  };\n\n\n  const handleAddFormSubmit = (event) => {\n    event.preventDefault();\n\n    const newContact = {\n      id: nanoid(),\n      fullName: addFormData.fullName,\n      address: addFormData.address,\n      phoneNumber: addFormData.phoneNumber,\n      email: addFormData.email,\n    };\n\n    const newContacts = [...contacts, newContact];\n    console.log(\"new contact\", newContacts);\n    console.log('newdata', newContact);\n    console.log('data before', newContacts);\n    setContacts(newContacts);\n\n    localStorage.setItem('onibile', JSON.stringify(newContacts));\n\n    window.location.replace(\"/\");\n  };\n\n\n  return(\n    <>\n    {console.log(\"rendering\")}\n    <div className=\"newItem\">\n      <h2>Add a Contact</h2>\n      <form method=\"post\">\n        <Input\n          type=\"text\"\n          name=\"fullName\"\n          required=\"required\"\n          placeholder=\"Enter a name...\"\n          onChange={handleAddFormChange}\n        /><br/>\n        <Input\n          type=\"text\"\n          name=\"address\"\n          required=\"required\"\n          placeholder=\"Enter an addres...\"\n          onChange={handleAddFormChange}\n        /><br/>\n        <Input\n          type=\"text\"\n          name=\"phoneNumber\"\n          required=\"required\"\n          placeholder=\"Enter a phone number...\"\n          onChange={handleAddFormChange}\n        /><br/>\n        <Input\n          type=\"email\"\n          name=\"email\"\n          required=\"required\"\n          placeholder=\"Enter an email...\"\n          onChange={handleAddFormChange}\n        /><br/>\n        \n          \n          <Button className=\"btn btn-primary\" color=\"primary\" to=\"/\" onClick={handleAddFormSubmit}>Add New</Button>\n          \n        \n\n      </form>\n    </div>\n\n    </>\n  );\n}\n\n\n\n\n\n\n      ","import React from \"react\";\nimport { Button} from \"reactstrap\";\n\nconst ReadOnlyRow = ({ contact, handleEditClick, handleDeleteClick }) => {\n  return (\n    <tr>\n      <td>{contact.fullName}</td>\n      <td>{contact.address}</td>\n      <td>{contact.phoneNumber}</td>\n      <td>{contact.email}</td>\n      <td>\n        <Button\n          type=\"button\"\n          color=\"info\"\n          onClick={(event) =>handleEditClick(event, contact)}\n        >\n          Edit\n        </Button>\n        <Button type=\"button\" color=\"danger\" onClick={() => handleDeleteClick(contact.id)}>\n          Delete\n        </Button>\n      </td>\n    </tr>\n  );\n};\n\nexport default ReadOnlyRow;\n","import React from \"react\";\nimport { \n  Button,\n  Input \n} from \"reactstrap\";\nconst EditableRow = ({\n  editFormData,\n  handleEditFormChange,\n  handleCancelClick,\n}) => {\n  return (\n    <tr>\n      <td>\n        <Input\n          type=\"text\"\n          required=\"required\"\n          placeholder=\"Enter a name...\"\n          name=\"fullName\"\n          value={editFormData.fullName}\n          onChange={handleEditFormChange}\n        ></Input>\n      </td>\n      <td>\n        <Input\n          type=\"text\"\n          required=\"required\"\n          placeholder=\"Enter an address...\"\n          name=\"address\"\n          value={editFormData.address}\n          onChange={handleEditFormChange}\n        ></Input>\n      </td>\n      <td>\n        <Input\n          type=\"text\"\n          required=\"required\"\n          placeholder=\"Enter a phone number...\"\n          name=\"phoneNumber\"\n          value={editFormData.phoneNumber}\n          onChange={handleEditFormChange}\n        ></Input>\n      </td>\n      <td>\n        <Input\n          type=\"email\"\n          required=\"required\"\n          placeholder=\"Enter an email...\"\n          name=\"email\"\n          value={editFormData.email}\n          onChange={handleEditFormChange}\n        ></Input>\n      </td>\n      <td>\n        <Button type=\"submit\" color=\"warning\">Save</Button>\n        <Button type=\"button\" color=\"danger\" onClick={handleCancelClick}>\n          Cancel\n        </Button>\n      </td>\n    </tr>\n  );\n};\n\nexport default EditableRow;\n","import React, { useState, Fragment } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport '../App.css'\nimport ReadOnlyRow from \"./ReadOnlyRow\";\nimport EditableRow from \"./EditableRow\";\n\n\nexport default function ListView (props)  {\n  const [contacts, setContacts] = useState(JSON.parse(localStorage.getItem('onibile')));\n  const [addFormData, setAddFormData] = useState({\n    fullName: \"\",\n    address: \"\",\n    phoneNumber: \"\",\n    email: \"\",\n  });\n\n  const [editFormData, setEditFormData] = useState({\n    fullName: \"\",\n    address: \"\",\n    phoneNumber: \"\",\n    email: \"\",\n  });\n\n  const [editContactId, setEditContactId] = useState(null);\n\n  const handleAddFormChange = (event) => {\n    event.preventDefault();\n\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n\n    const newFormData = { ...addFormData };\n    newFormData[fieldName] = fieldValue;\n\n    setAddFormData(newFormData);\n  };\n\n  const handleEditFormChange = (event) => {\n    event.preventDefault();\n\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n\n    const newFormData = { ...editFormData };\n    newFormData[fieldName] = fieldValue;\n\n    setEditFormData(newFormData);\n  };\n\n  const handleAddFormSubmit = (event) => {\n    event.preventDefault();\n\n    const newContact = {\n      id: nanoid(),\n      fullName: addFormData.fullName,\n      address: addFormData.address,\n      phoneNumber: addFormData.phoneNumber,\n      email: addFormData.email,\n    };\n\n    const newContacts = [...contacts, newContact];\n    localStorage.setItem('onibile', JSON.stringify(newContacts));\n    setContacts(newContacts);\n  };\n\n  const handleEditFormSubmit = (event) => {\n    event.preventDefault();\n\n    const editedContact = {\n      id: editContactId,\n      fullName: editFormData.fullName,\n      address: editFormData.address,\n      phoneNumber: editFormData.phoneNumber,\n      email: editFormData.email,\n    };\n\n    const newContacts = [...contacts];\n\n    const index = contacts.findIndex((contact) => contact.id === editContactId);\n\n    newContacts[index] = editedContact;\n\n    setContacts(newContacts);\n    console.log(newContacts);\n    localStorage.setItem('onibile', JSON.stringify(newContacts))\n    setEditContactId(null);\n  };\n\n  const handleEditClick = (event, contact) => {\n    event.preventDefault();\n    setEditContactId(contact.id);\n\n    const formValues = {\n      fullName: contact.fullName,\n      address: contact.address,\n      phoneNumber: contact.phoneNumber,\n      email: contact.email,\n    };\n\n    setEditFormData(formValues);\n  };\n\n  const handleCancelClick = () => {\n    setEditContactId(null);\n  };\n\n  const handleDeleteClick = (contactId) => {\n    const newContacts = [...contacts];\n\n    const index = contacts.findIndex((contact) => contact.id === contactId);\n\n    newContacts.splice(index, 1);\n\n    setContacts(newContacts);\n    localStorage.setItem('onibile', JSON.stringify(newContacts))\n  };\n\n  return (\n    <div>\n      <form className=\"list-view\" onSubmit={handleEditFormSubmit}>\n        <table>\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Address</th>\n              <th>Phone Number</th>\n              <th>Email</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {contacts.map((contact) => (\n              <>\n                {editContactId === contact.id ? (\n                  <EditableRow\n                    editFormData={editFormData}\n                    handleEditFormChange={handleEditFormChange}\n                    handleCancelClick={handleCancelClick}\n                  />\n                ) : (\n                  <ReadOnlyRow\n                    contact={contact}\n                    handleEditClick={handleEditClick}\n                    handleDeleteClick={handleDeleteClick}\n                  />\n                )}\n              </>\n            ))}\n          </tbody>\n        </table>\n      </form>\n    </div>\n  );\n};\n","import React, { useState, Fragment, useEffect, Component } from \"react\";\nimport {BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\"\nimport NewItem from \"./components/NewItem\"\nimport ListView from \"./components/ListView\"\nimport data from \"./mock-data.json\";\n\nif(!(JSON.parse(localStorage.getItem('onibile')))) {\n  localStorage.setItem('onibile', JSON.stringify(data));\n}\n\n\nexport default function App(){\n  return(\n    <div className=\"App\">\n      <main>\n        <BrowserRouter>\n        <Navbar/>\n        <Switch>\n          <Route path = \"/\" exact>\n            <ListView/>\n          </Route>\n          <Route path = \"/addList\" >\n            <NewItem />\n          </Route>\n        </Switch> \n        </BrowserRouter>\n        </main>  \n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {HashRouter} from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter hashType =\"hashbang\">\n       <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}